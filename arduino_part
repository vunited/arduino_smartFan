#include <U8glib.h>//lcd显示屏
#include <SimpleDHT.h>//dht11温度传感器
#include <Servo.h>//舵机

///////////////////////////////Processing 通信定义///////////////////////////

// Wiring / Arduino Code
// Code for sensing a switch status and writing the value to the serial port.

int switchPin = 2;                       // Switch connected to pin 4
/////////////////////////////////////////////////////////////////////////////


///////////////温度定义//////////////////////////////////////////////////
////////////使用DHT11温度传感器方法////////////////////////////////////
// for DHT11, 
//      VCC: 5V or 3V
//      GND: GND
//      DATA: 2
int pinDHT11 = 2;//数字口2号为温度
SimpleDHT11 dht11;

/////////////////////////////////////////////////////////////////////////

//////////////////LM35D温度传感器使用方法////////////////////////////////
//  int val;
//  int dat;
//  val=analogRead(0);//温度传感器接到模拟PIN0上；
//  dat=(125*val)>>8;
// read without samples.
///////////////////////////////////////////////////////////////////////

//////////////////////舵机定义部分////////////////////////////////////
#define PIN_SERVO 10  
Servo myservo; 
//////////////////////////////////////////////////////////////////////

//////////////////////风扇定义部分////////////////////////////////////
//加速

//减速

////////////////////////////////////////////////////////////////////////////////

///////////////////////////显示屏定义部分///////////////////////////////////////
U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_NONE) ;
//--正常温位图--
static unsigned char u8g_logo_bits[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0xE0,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x0E,0xC0,0x01,0xC0,0xF0,0x3F,0x00,0x0E,0xC0,0xFF,0x3F,0x1C,0xC3,0x00,0x00,
0x00,0x02,0x00,0x01,0x80,0x33,0x30,0xF8,0xFF,0x0F,0xC0,0x00,0x38,0x73,0x00,0x00,
0x00,0x01,0x00,0x02,0x00,0xF7,0x3F,0x08,0x00,0x00,0xC0,0x00,0xFE,0xFF,0x03,0x00,
0x80,0xF0,0x30,0x02,0x40,0x30,0x30,0x08,0x81,0x00,0xC1,0x00,0x02,0x00,0x03,0x00,
0x80,0x1C,0x00,0x04,0xC0,0xF0,0x3F,0xF8,0xFF,0x0F,0xC1,0x00,0xFA,0x7F,0x03,0x00,
0x80,0x00,0x00,0x04,0x80,0x30,0x30,0x08,0x81,0x00,0xC1,0x00,0x18,0x40,0x00,0x00,
0x80,0x00,0x00,0x04,0x00,0x00,0x00,0x08,0xFF,0x00,0xC1,0x3F,0xF8,0x7F,0x00,0x00,
0x80,0x00,0x10,0x04,0x80,0xF8,0x7F,0x08,0x00,0x00,0xC1,0x00,0x00,0x03,0x00,0x00,
0x80,0xC0,0x11,0x02,0x80,0x88,0x44,0xE8,0xFF,0x01,0xC1,0x00,0xFC,0xFF,0x00,0x00,
0x00,0x01,0x0F,0x02,0x80,0x88,0x44,0x88,0x80,0x00,0xC1,0x00,0x04,0x83,0x00,0x00,
0x00,0x02,0x00,0x01,0x40,0x88,0x44,0x06,0x77,0x00,0xC1,0x00,0x04,0x83,0x00,0x00,
0x00,0x0E,0xC0,0x01,0x40,0x88,0x44,0x06,0x7F,0x00,0xC1,0x00,0x04,0xF3,0x00,0x00,
0x00,0x30,0x30,0x00,0x40,0xFF,0xFF,0xF1,0x80,0xEF,0xFF,0x7F,0x00,0x03,0x00,0x00,
0x00,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

//---高温位图---
static unsigned char u8g_logo_bits2[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,
0x00,0x30,0x80,0x03,0xC0,0xF8,0x0F,0xC0,0x01,0x02,0x20,0xFE,0xFF,0x07,0x00,0x00,
0x00,0x10,0x00,0x02,0x80,0x19,0x0C,0xFF,0xFF,0x04,0x20,0x00,0x00,0x00,0x00,0x00,
0x00,0x08,0x00,0x04,0x00,0xFB,0x0F,0x03,0x00,0xC8,0xFF,0xE1,0x7F,0x00,0x00,0x00,
0x00,0x86,0x4F,0x04,0x40,0x18,0x0C,0x23,0x08,0x00,0x20,0x20,0x40,0x00,0x00,0x00,
0x00,0x06,0xC7,0x0B,0xC0,0xF8,0x0F,0xFF,0xFF,0x47,0x20,0xE0,0x7F,0x00,0x00,0x00,
0x00,0x06,0x80,0x0B,0x80,0x18,0x0C,0x23,0x08,0x84,0x20,0x00,0x00,0x00,0x00,0x00,
0x00,0x06,0x00,0x08,0x00,0x00,0x00,0xE3,0x0F,0x84,0x20,0xFC,0xFF,0x03,0x00,0x00,
0x00,0x06,0x30,0x08,0x80,0xFC,0x1F,0x03,0x00,0x04,0x21,0x0C,0x00,0x02,0x00,0x00,
0x00,0x06,0x78,0x04,0x80,0x44,0x11,0xFB,0x1F,0x04,0x20,0xCC,0x3F,0x02,0x00,0x00,
0x00,0x08,0x0C,0x04,0x80,0x44,0x11,0x13,0x08,0x04,0x20,0x4C,0x20,0x02,0x00,0x00,
0x00,0x10,0x00,0x02,0x40,0x44,0x91,0x60,0x06,0x04,0x1F,0xCC,0x3F,0x02,0x00,0x00,
0x00,0x30,0x80,0x03,0x40,0x44,0x91,0xE0,0x07,0x0B,0x00,0x4C,0x00,0x02,0x00,0x00,
0x00,0xC0,0x60,0x00,0x40,0xFF,0x7F,0x1C,0xF8,0xF1,0xFF,0x0D,0xE0,0x03,0x00,0x00,
0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};


static unsigned char u8g_logo1_bits[] U8G_PROGMEM = {
  0x00,         // 00000000 
  0x02,         // 00000010
  0x05,         // 00000101
  0x02,         // 00000010
  0x00,         // 00000000 
  0x00,         // 00000000
  0x00,         // 00000000 
  0x00,         // 00000000
  0x00,         // 00000000 
  0x00,         // 00000000 
  0x00,         // 00000000 
  0x00,         // 00000000 
};
//////////////////////////////////////////////////////////////////////////////////////

//----------------------------------主程序----------------------------//
void setup(void) {
  pinMode(switchPin, INPUT); 
  Serial.begin(9600);//启动串行通讯，波特率为9600b/s

///////////////////【自定义端口启动】///////////////////
  pinMode(13,OUTPUT);
  pinMode(12,OUTPUT);

   myservo.attach(PIN_SERVO);  
  //u8g.setRot180();
  u8g.setFont(u8g_font_6x12);
  u8g.setFontRefHeightText();
  u8g.setFontPosTop();
}
////////////////////////////////////////////////////////////////////////

//----------------------------工作流-------------------------------------//
void loop(void) {
  
/////////////////////   【 1-温度采集】     ////////////////
  byte temperature = 0;
  byte humidity = 0;
 int err = SimpleDHTErrSuccess;
 if ((err = dht11.read(pinDHT11, &temperature, &humidity, NULL)) != SimpleDHTErrSuccess) 
{
 Serial.print("Read DHT11 failed, err="); Serial.println(err);delay(1000);
return;
 }
////////////////////////////////////////////////////////////

//////////////////   【2-LCD液晶屏字符显示[正常]】    //////////////
  u8g.firstPage();  
  do {
    u8g.drawStr(0, 0, "Temperature Normal");
    u8g.drawStr(0, 12, "Tep:");
    u8g.drawStr(50, 12, "C");
    u8g.drawXBMP( 45, 12, 8, 12, u8g_logo1_bits);
    u8g.drawXBMP( 0, 40, 128, 22, u8g_logo_bits);
    u8g.setPrintPos(28, 12);
    u8g.print((int)temperature); 
    
  } while( u8g.nextPage() );
  delay(1000);
///////////////////////////////////////////////////////////////


///////////////////    【3-转向舵机驱动】     //////////////////
if(Serial.available()){
    int inByte = Serial.read();
    switch(inByte)
    {
      case 0x00:
       
        myservo.write(65);//设置舵机旋转的角度
         digitalWrite(12, LOW);
          delay(1000); 
        break;
      case 0x01:
        
        myservo.write(135);//设置舵机旋转的角度
        digitalWrite(13, HIGH);
          delay(1000); 
        break;
        }
  }
////////////////////////////////////////////////////////////////

/////////////////    【4-Processing 通信】    ////////////////////
if (digitalRead(switchPin) == HIGH) {  // If switch is ON,
    Serial.write((int)temperature);               // send 1 to Processing
  } else {                               // If the switch is not ON,
    Serial.write(0);               // send 0 to Processing
  }
  delay(1000);     
/////////////////////////////////////////////////////////////////

///////////////     【5-温度报警设置】       ////////////////////////
 if((int)temperature>27) // 如果温度大于27，开始报警
 {        
 ///////////////////////////////////////////////////////////////////////
 
//////////////////   【6-LCD液晶屏字符显示[高温预警]】    //////////////
  u8g.firstPage();  
  do {
    u8g.drawStr(0, 0, "Temperature High");
    u8g.drawStr(0, 12, "Tep:");
    u8g.drawStr(50, 12, "C");
    u8g.drawXBMP( 45, 12, 8, 12, u8g_logo1_bits);
    u8g.drawXBMP( 0, 40, 128, 22, u8g_logo_bits2);//显示哭脸+高温预警图
    u8g.setPrintPos(28, 12);
    u8g.print((int)temperature);    
  } while( u8g.nextPage() );
  delay(1000);
/////////////////////////////////////////////////////////////// 

//////////////////  【7-语音报警】  ////////////////////////////
pinMode(4,OUTPUT);//开启4号端口;
tone(4, 3);//端口生成脉冲3次
delay(2); //延时间隔
/////////////////////////////////////////////////////////////// 
//////////////////  【8-风扇开启】  ////////////////////////////  
pinMode(8,OUTPUT);//开启8号端口;
digitalWrite(8, LOW);//低电平触发风扇开启
delay(50);//延时间隔
/////////////////////////////////////////////////////////////// 
}  

  else {          // 如果温度小于27，关闭报警
  
    noTone(4);       //关闭语音报警
    digitalWrite(8, HIGH);//高阻态关闭风扇
}
/////////////////////////////////////////////////////////////////////  
//////////////////////////继续加功能-start//////////////////////////

//自动摇摆

/////////////////////////////////////////////////////////////////////

}

